/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";
    };

    behaviors {
        letter_letter: letter_letter {
            compatible = "zmk,behavior-hold-tap";
            label = "LETTER_LETTER";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q                          &kp W                      &kp E                      &kp R                        &kp T    &kp Y  &kp U                         &kp I                       &kp O                       &kp P                                   &none
&none  &letter_letter A LEFT_CONTROL  &letter_letter S LEFT_GUI  &letter_letter D LEFT_ALT  &letter_letter F LEFT_SHIFT  &kp G    &kp H  &letter_letter J RIGHT_SHIFT  &letter_letter K RIGHT_ALT  &letter_letter L RIGHT_GUI  &letter_letter SEMICOLON RIGHT_CONTROL  &none
&none  &kp Z                          &kp X                      &kp C                      &kp V                        &kp B    &kp N  &kp M                         &kp COMMA                   &kp DOT                     &kp FSLH                                &none
                                                                 &kp TAB                    &kp BACKSPACE                &mo 1    &mo 2  &none                         &kp ENTER
            >;
        };

        num_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6        &kp N7        &kp N8      &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT      &kp DOWN      &kp UP      &kp RIGHT  &trans  &trans
&kp LSHFT   &bt BT_CLR    &bt BT_NXT    &trans        &trans        &trans          &kp K_VOL_DN  &kp K_VOL_UP  &kp K_MUTE  &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET       &trans        &kp RALT
            >;
        };

        sym_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp LESS_THAN     &kp LEFT_BRACE   &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS   &kp QUESTION     &kp EQUAL  &kp EXCLAMATION  &kp HASH              &kp DOLLAR    &kp PERCENT  &kp BSPC
&kp LCTRL  &kp GREATER_THAN  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp AMPERSAND    &kp PLUS   &kp CARET        &kp SLASH             &kp ASTERISK  &kp BSLH     &kp GRAVE
&kp LSHFT  &trans            &trans           &trans             &kp TILDE              &kp PIPE         &kp MINUS  &kp UNDERSCORE   &kp NON_US_BACKSLASH  &kp RBRC      &kp PIPE     &kp TILDE
                                              &kp LGUI           &trans                 &kp SPACE        &kp RET    &trans           &kp RALT
            >;
        };

        media_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
